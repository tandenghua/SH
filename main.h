/*
 *
 *
 */
#ifndef __MAIN_H_
#define __MAIN_H_

#define NEW_LITTLE_MACHINE

#include <stdio.h>
#include <stdlib.h>
#include <fcntl.h>
#include <unistd.h>
#include <string.h>
#include <string.h>
#include <memory.h>
#include <time.h>
#include <math.h>
#include <pthread.h>
#include <sys/time.h>/*settimeofday,gettimeofday,tm time_t结构体*/
#include <sys/types.h>
#include <sys/ioctl.h>
#include <sys/mman.h>

#include <termios.h>	//串口头文件 
#include <linux/rtc.h>
#include <linux/fb.h> 
#include <linux/kd.h>
#include <linux/i2c-dev.h>
#include <linux/i2c.h>

#include "color256.h"

typedef unsigned short COLOR_TYPE;
#define VIDEO_RAM 0x96000

/*设备 名称*/
#define OUR_DEVICE	"/dev/tt"
#define DAC_DEVICE	"/dev/spidev0.1" 
#define SKY_DEVICE	"/dev/spidev0.3" 
#define FB_DEVICE	"/dev/fb0"
#define MEM_DEVICE	"/dev/mem"
#define MTD4_DEVICE	"/dev/mtd4"
#define MTD3_DEVICE	"/dev/mtd3"
#define I2C_DEVICE	"/dev/i2c-0"
#define TTY_DEVICE	"/dev/ttySAC1"
#define RTC_DEVICE	"/dev/rtc0"
#define	SD_DEVICE	"/dev/sda1"


#define TRUE 1
#define FALSE 0
#define MAX(x,y) ((x)>(y)?(x):(y))
#define MIN(x,y) ((x)<(y)?(x):(y))

#define VAL(a) pt->config_current->a
#define HOR_COL1 scheme[pt->config_current->scheme][0]
#define HOR_COL2 scheme[pt->config_current->scheme][1]
#define VER_COL1 scheme[pt->config_current->scheme][2]
#define	VER_COL2 scheme[pt->config_current->scheme][3]
#define VER_DATA_COL1 scheme[pt->config_current->scheme][4]
#define	VER_DATA_COL2 scheme[pt->config_current->scheme][5]
#define FONT_COL1 scheme[pt->config_current->scheme][6]
#define FONT_COL2 scheme[pt->config_current->scheme][7]
#define OTHER_COL scheme[pt->config_current->scheme][8]
#define DAC_COL scheme[pt->config_current->scheme][9]
#define WAVE_BACK scheme[pt->config_current->scheme][10]
#define WAVE_GROUND scheme[pt->config_current->scheme][11]

/*
 *
 *          <d0>
 *          <d4> 
 *     <d2>       <d3>
 *			<d5>
 *          <d1>
 */
 
#define NKEY0 0xd0 
#define NKEY1 0xd1
#define NKEY2 0xd2
#define NKEY3 0xd3
#define NKEY4 0xd4
#define NKEY5 0xd5
#define NKEY6 0xd6

/******************************************************************************
 *
 *   KEY_DB_REG											KEY13
 *														
 *   KEY1												KEY12	KEY14
 *
 *   KEY2												KEY11
 *																KEY15
 *														KEY10		
 *   KEY3          
 *   KEY4          
 *              KEY5	KEY6	KEY7	KEY8	KEY9      
 *
 *
 **********************************************************************************/
#define KEY1 0xf0
#define KEY2 0xf1
#define KEY3 0xf2
#define KEY4 0xf3
#define KEY5 0xf4
#define KEY6 0xf5
#define KEY7 0xf6
#define KEY8 0xf7
#define KEY9 0xf8
#define KEY10 0xf9
#define KEY11 0xfa
#define KEY12 0xfb
#define KEY13 0xfc
#define KEY14 0xfd
#define KEY15 0xfe
#define KEY16 0xff

#define LIGHT_HIGH 0xE2
#define LIGHT_MID 0xE1
#define LIGHT_LOW 0xE0
#define KEY_FREZ 0xEC
#define KEY_DB_REG	0xEF /*增益步长调节*/
#define KEY_ELSE  0xEE /*双键进入打印画面*/
#define KEY_ALARM 0xED /**/

/*设备tt  ioctl 调用参数*/
#define POWER_HIGH	0x6001
#define POWER_LOW	0x6002
#define DUAL_ON		0x6003
#define DUAL_OFF	0x6004
#define DAMPING_1	0x6005
#define DAMPING_2	0x6006
#define DAMPING_3	0x6007
#define DAMPING_4	0x6008
#define DB_INIT		0x6009
#define DB_CHANGE	0x600A
#define LED1		0x600B
#define LED2		0x600C
#define LED3		0x600D
#define BEEP		0x600E
#define LED_ON		0x0
#define LED_OFF		0x1
#define SK_LOW		0x600F
#define SK_HIGH		0x6010
#define LOWF_1		0x6015 /*0.5MHz*/
#define LOWF_2		0x6016 /*1MHz*/
#define LOWF_3		0x6017 /*2MHz*/
#define LOWF_4		0x6018 /*10MHz*/
#define READ_FREZ	0x6019
#define DMA_OK		0x6021
#define NO_FREZ		0x6022

#define FREEZE		0x6030

/*按键处理的参数0123*/
#define NOTHING		0
#define ADD_PARA	1
#define SUB_PARA	2
#define REGULATION	3

/*正弦 余弦 求值 a 为角度值乘10 */
#define SIN(a) sin_lookup_table[a]
#define COS(a) sin_lookup_table[900-a]

/*警告信息
 *0冻结警告 1闸门ab放大警告 2射频警告 3功率低警告 4功率高警告
 *5闸门关警告 6DAC关警告 7 DAC回波警告 8功率高变低警告 9检波射频调节警告
 *10打印警告 11校准已完成 12校准错误重新校准 13 DAC状态,声速不可调节
 *
 *
 *
 */
#define WARNING_FREZ	0x00
#define WARNING_MAGNIFY	0x01
#define WARNING_RF	0x02
#define WARNING_POWERH	0x03
#define WARNING_POWERL	0x04
#define WARNING_GATE	0x05
#define WARNING_DAC	0x06
#define WARNING_DACECHO	0x07
#define WARNING_HPOWER	0x08
#define WARNING_RF1	0x09
#define WARNING_PRINT	0x0a
#define WARNING_CAL_OK	0x0b
#define WARNING_CAL_ERROR	0x0c
#define WARNING_DAC_MTL	0x0d
#define WARNING_PROBE_TEST_RF	0x0e
#define WARNING_PRINT_ERROR	0x0f
#define WARNING_USTORE_ERROR	0x10
#define WARNING_CALING	0x11
#define WARNING_COPY_OK	0x12
#define WARNING_PRINT_OK	0x13
#define WARNING_UPDATING	0x14
#define WARNING_UPDATE_OK	0x15
#define WARNING_NAVIGATION	0x16

#define X0	0
#define X1	480
#define X2	639
#define X3	128
#define X4	(X3+128)
#define X5	(X4+128)
#define X6	(X5+128)
#define Y0	0
#define Y1	400
#define Y2	430
#define Y3	479
#define Y4	100
#define Y5	(Y4+100)
#define Y6	(Y5+100)
#define Y7	384

#define	X_1	128
#define	X_2	160
#define	X_3	80
#define X_4	158
#define X_5	68

#define	Y_1	52
#define	Y_2	50
#define	Y_3	160
#define Y_5	160

#define	H_SIZE		(X_1*Y_1) //一个主菜单图标的像素
#define	V_SIZE		(X_2*Y_2) //一个副菜单图标的像素
#define L_SIZE		(X_3*Y_2)//LOCK图标像素
#define W_SIZE		(X_5*Y_5)

#define	BASE	0

#define CONFIG_QUA	30
#define DATA_QUA	200


typedef unsigned short u16;

extern unsigned char key_light_high[];
extern unsigned char key_light_mid[];
extern unsigned char key_light_low[];



/* 增益差  表格 */
static const unsigned int db_lookup_table[]={
	0,104,92,84,80,76,72,70,67,65,64,62,60,59,58,57,55,54,53,52,52,51,50,49,48,48,47,46,46,45,44,
	44,43,43,42,42,41,41,40,40,40,39,39,38,38,37,37,37,36,36,36,35,35,35,34,34,34,33,33,33,32,32,
	32,32,31,31,31,31,30,30,30,30,29,29,29,29,28,28,28,28,27,27,27,27,27,26,26,26,26,26,25,25,25,
	25,25,24,24,24,24,24,24,23,23,23,23,23,23,22,22,22,22,22,22,21,21,21,21,21,21,21,20,20,20,20,
	20,20,20,19,19,19,19,19,19,19,18,18,18,18,18,18,18,18,17,17,17,17,17,17,17,17,17,16,16,16,16,
	16,16,16,16,16,15,15,15,15,15,15,15,15,15,14,14,14,14,14,14,14,14,14,14,13,13,13,13,13,13,13,
	13,13,13,13,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,
	10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,8,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,7,7,
	7,7,7,7,7,7,7,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,4,4,4,4,4,4,
	4,4,4,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
	2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};

static const float db_table[]={
1.00000000,1.0115794543,1.0232929923,1.0351421667,1.0471285481,1.0592537252,1.0715193052,1.0839269140,1.0964781961,1.1091748153,1.1220184543,1.1350108157,1.1481536215,1.1614486138,1.1748975549,1.1885022274,1.2022644346,1.2161860006,1.2302687708,1.2445146118,1.2589254118,1.2735030810,1.2882495517,1.3031667785,1.3182567386,1.3335214322,1.3489628826,1.3645831366,1.3803842646,1.3963683611,1.4125375446,1.4288939585,1.4454397707,1.4621771745,1.4791083882,1.4962356561,1.5135612484,1.5310874617,1.5488166189,1.5667510701,1.5848931925,1.6032453907,1.6218100974,1.6405897732,1.6595869074,1.6788040181,1.6982436525,1.7179083872,1.7378008287,1.7579236140,1.7782794100,1.7988709151,1.8197008586,1.8407720015,1.8620871367,1.8836490895,1.9054607180,1.9275249132,1.9498445998,1.9724227361,1.9952623150,2.0183663637,2.0417379447,2.0653801558,2.0892961309,2.1134890398,2.1379620895,2.1627185237,2.1877616239,2.2130947096,2.2387211386,2.2646443076,2.2908676528,2.3173946500,2.3442288153,2.3713737057,2.3988329190,2.4266100951,2.4547089157,2.4831331053,2.5118864315,2.5409727055,2.5703957828,2.6001595632,2.6302679919,2.6607250598,2.6915348039,2.7227013081,2.7542287033,2.7861211686,2.8183829313,2.8510182675,2.8840315031,2.9174270140,2.9512092267,2.9853826189,3.0199517204,3.0549211132,3.0902954325,3.1260793671,3.1622776602,3.1988951097,3.2359365693,3.2734069488,3.3113112148,3.3496543916,3.3884415614,3.4276778655,3.4673685045,3.5075187395,3.5481338923,3.5892193465,3.6307805477,3.6728230050,3.7153522910,3.7583740429,3.8018939632,3.8459178205,3.8904514499,3.9355007546,3.9810717055,4.0271703433,4.0738027780,4.1209751910,4.1686938347,4.2169650343,4.2657951880,4.3151907683,4.3651583224,4.4157044735,4.4668359215,4.5185594437,4.5708818961,4.6238102140,4.6773514129,4.7315125896,4.7863009232,4.8417236758,4.8977881937,4.9545019080,5.0118723363,5.0699070827,5.1286138399,5.1880003893,5.2480746025,5.3088444423,5.3703179637,5.4325033149,5.4954087386,5.5590425727,5.6234132519,5.6885293084,5.7543993734,5.8210321777,5.8884365536,5.9566214353,6.0255958607,6.0953689724,6.1659500186,6.2373483548,6.3095734448,6.3826348619,6.4565422903,6.5313055265,6.6069344801,6.6834391757,6.7608297539,6.8391164728,6.9183097092,6.9984199600,7.0794578438,7.1614341021,7.2443596007,7.3282453314,7.4131024130,7.4989420933,7.5857757503,7.6736148936,7.7624711663,7.8523563461,7.9432823472,8.0352612219,8.1283051616,8.2224264995,8.3176377110,8.4139514165,8.5113803820,8.6099375218,8.7096358996,8.8104887301,8.9125093813,9.0157113761,9.1201083936,9.2257142715,9.3325430080,9.4406087629,9.5499258602,9.6605087899,9.7723722096,9.8855309466,10.0000000000,10.1157945426,10.2329299228,10.3514216668,10.4712854805,10.5925372518,10.7151930524,10.8392691402,10.9647819614,11.0917481526,11.2201845430,11.3501081567,11.4815362150,11.6144861384,11.7489755494,11.8850222744,12.0226443462,12.1618600065,12.3026877081,12.4451461177,12.5892541179,12.7350308102,12.8824955169,13.0316677845,13.1825673856,13.3352143216,13.4896288259,13.6458313659,13.8038426460,13.9636836106,14.1253754462,14.2889395851,14.4543977075,14.6217717446,14.7910838817,14.9623565609,15.1356124844,15.3108746168,15.4881661891,15.6675107011,15.8489319246,16.0324539069,16.2181009736,16.4058977320,16.5958690744,16.7880401812,16.9824365246,17.1790838716,17.3780082875,17.5792361396,17.7827941004,17.9887091513,18.1970085861,18.4077200147,18.6208713666,18.8364908949,19.0546071796,19.2752491319,19.4984459976,19.7242273611,19.9526231497,20.1836636368,20.4173794467,20.6538015581,20.8929613085,21.1348903984,21.3796208950,21.6271852373,21.8776162395,22.1309470961,22.3872113857,22.6464430759,22.9086765277,23.1739464997,23.4422881532,23.7137370566,23.9883291902,24.2661009508,24.5470891569,24.8313310530,25.1188643151,25.4097270555,25.7039578277,26.0015956317,26.3026799190,26.6072505980,26.9153480393,27.2270130808,27.5422870334,27.8612116863,28.1838293126,28.5101826750,28.8403150313,29.1742701400,29.5120922667,29.8538261892,30.1995172040,30.5492111322,30.9029543251,31.2607936712,31.6227766017,31.9889510969,32.3593656930,32.7340694879,33.1131121483,33.4965439158,33.8844156139,34.2767786546,34.6736850453,35.0751873953,35.4813389234,35.8921934645,36.3078054770,36.7282300498,37.1535229097,37.5837404288,38.0189396321,38.4591782045,38.9045144994,39.3550075456,39.8107170553,40.2717034325,40.7380277804,41.2097519097,41.6869383470,42.1696503429,42.6579518802,43.1519076828,43.6515832240,44.1570447353,44.6683592151,45.1855944375,45.7088189615,46.2381021399,46.7735141287,47.3151258961,47.8630092323,48.4172367584,48.9778819368,49.5450190805,50.1187233627,50.6990708275,51.2861383991,51.8800038929,52.4807460250,53.0884444231,53.7031796370,54.3250331492,54.9540873858,55.5904257270,56.2341325190,56.8852930844,57.5439937337,58.2103217771,58.8843655356,59.5662143529,60.2559586074,60.9536897240,61.6595001861,62.3734835482,63.0957344480,63.8263486191,64.5654229035,65.3130552647,66.0693448008,66.8343917569,67.6082975392,68.3911647281,69.1830970919,69.9841996002,70.7945784384,71.6143410213,72.4435960075,73.2824533139,74.1310241301,74.9894209332,75.8577575029,76.7361489362,77.6247116629,78.5235634610,79.4328234724,80.3526122186,81.2830516164,82.2242649947,83.1763771103,84.1395141645,85.1138038202,86.0993752185,87.0963589956,88.1048873008,89.1250938134,90.1571137606,91.2010839356,92.2571427155,93.3254300797,94.4060876286,95.4992586021,96.6050878990,97.7237220956,98.8553094657,100.0000000000,101.1579454260,102.3292992281,103.5142166679,104.7128548051,105.9253725177,107.1519305238,108.3926914021,109.6478196143,110.9174815262,112.2018454302,113.5010815672,114.8153621497,116.1448613840,117.4897554940,118.8502227437,120.2264434617,121.6186000646,123.0268770812,124.4514611771,125.8925411794,127.3503081017,128.8249551693,130.3166778452,131.8256738556,133.3521432163,134.8962882592,136.4583136589,138.0384264603,139.6368361056,141.2537544623,142.8893958511,144.5439770746,146.2177174457,147.9108388168,149.6235656094,151.3561248436,153.1087461682,154.8816618912,156.6751070108,158.4893192461,160.3245390690,162.1810097359,164.0589773200,165.9586907438,167.8804018123,169.8243652462,171.7908387158,173.7800828749,175.7923613959,177.8279410039,179.8870915129,181.9700858610,184.0772001469,186.2087136663,188.3649089490,190.5460717963,192.7524913191,194.9844599758,197.2422736115,199.5262314969,201.8366363682,204.1737944670,206.5380155811,208.9296130854,211.3489039837,213.7962089502,216.2718523727,218.7761623950,221.3094709606,223.8721138568,226.4644307593,229.0867652768,231.7394649968,234.4228815320,237.1373705662,239.8832919019,242.6610095082,245.4708915685,248.3133105296,251.1886431510,254.0972705549,257.0395782769,260.0159563165,263.0267991895,266.0725059799,269.1534803927,272.2701308078,275.4228703338,278.6121168630,281.8382931264,285.1018267504,288.4031503127,291.7427014001,295.1209226666,298.5382618918,301.9951720402,305.4921113216,309.0295432514,312.6079367124,316.2277660168,319.8895109691,323.5936569296,327.3406948788,331.1311214826,334.9654391578,338.8441561392,342.7677865465,346.7368504525,350.7518739526,354.8133892336,358.9219346450,363.0780547701,367.2823004981,371.5352290972,375.8374042884,380.1893963206,384.5917820454,389.0451449943,393.5500754558,398.1071705535,402.7170343255,407.3802778041,412.0975190973,416.8693834703,421.6965034286,426.5795188016,431.5190768278,436.5158322402,441.5704473533,446.6835921510,451.8559443749,457.0881896149,462.3810213993,467.7351412872,473.1512589615,478.6300923226,484.1723675841,489.7788193684,495.4501908048,501.1872336273,506.9907082747,512.8613839914,518.8000389290,524.8074602498,530.8844442310,537.0317963703,543.2503314924,549.5408738576,555.9042572704,562.3413251903,568.8529308438,575.4399373372,582.1032177709,588.8436553556,595.6621435290,602.5595860744,609.5368972402,616.5950018615,623.7348354824,630.9573444802,638.2634861905,645.6542290347,653.1305526475,660.6934480076,668.3439175686,676.0829753920,683.9116472814,691.8309709189,699.8419960023,707.9457843841,716.1434102129,724.4359600750,732.8245331389,741.3102413009,749.8942093325,758.5775750292,767.3614893618,776.2471166287,785.2356346101,794.3282347243,803.5261221856,812.8305161641,822.2426499471,831.7637711027,841.3951416452,851.1380382024,860.9937521846,870.9635899561,881.0488730080,891.2509381337,901.5711376060,912.0108393559,922.5714271548,933.2543007970,944.0608762859,954.9925860214,966.0508789898,977.2372209558,988.5530946569,1000.0000000000,1011.5794542599,1023.2929922808,1035.1421666793,1047.1285480509,1059.2537251773,1071.5193052376,1083.9269140212,1096.4781961432,1109.1748152624,1122.0184543020,1135.0108156723,1148.1536214969,1161.4486138403,1174.8975549395,1188.5022274370,1202.2644346174,1216.1860006464,1230.2687708124,1244.5146117714,1258.9254117942,1273.5030810167,1288.2495516931,1303.1667784523,1318.2567385564,1333.5214321633,1348.9628825917,1364.5831365889,1380.3842646029,1396.3683610559,1412.5375446228,1428.8939585111,1445.4397707459,1462.1771744567,1479.1083881682,1496.2356560944,1513.5612484362,1531.0874616820,1548.8166189125,1566.7510701081,1584.8931924611,1603.2453906900,1621.8100973589,1640.5897731995,1659.5869074376,1678.8040181226,1698.2436524617,1717.9083871576,1737.8008287494,1757.9236139587,1778.2794100389,1798.8709151288,1819.7008586100,1840.7720014690,1862.0871366629,1883.6490894898,1905.4607179632,1927.5249131909,1949.8445997580,1972.4227361149,1995.2623149689,2018.3663636816,2041.7379446695,2065.3801558105,2089.2961308540,2113.4890398366,2137.9620895022,2162.7185237270,2187.7616239496,2213.0947096056,2238.7211385683,2264.6443075931,2290.8676527678,2317.3946499685,2344.2288153199,2371.3737056617,2398.8329190195,2426.6100950824,2454.7089156850,2483.1331052956,2511.8864315096,2540.9727055493,2570.3957827689,2600.1595631653,2630.2679918954,2660.7250597988,2691.5348039269,2722.7013080779,2754.2287033382,2786.1211686298,2818.3829312645,2851.0182675039,2884.0315031266,2917.4270140012,2951.2092266664,2985.3826189180,3019.9517204020,3054.9211132155,3090.2954325136,3126.0793671240,3162.2776601684,3198.8951096914,3235.9365692963,3273.4069487884,3311.3112148259,3349.6543915783,3388.4415613920,3427.6778654645,3467.3685045253,3507.5187395257,3548.1338923358,3589.2193464501,3630.7805477010,3672.8230049808,3715.3522909717,3758.3740428844,3801.8939632056,3845.9178204535,3890.4514499428,3935.5007545578,3981.0717055350,4027.1703432546,4073.8027780411,4120.9751909733,4168.6938347034,4216.9650342858,4265.7951880159,4315.1907682777,4365.1583224017,4415.7044735331,4466.8359215096,4518.5594437492,4570.8818961488,4623.8102139926,4677.3514128720,4731.5125896148,4786.3009232264,4841.7236758410,4897.7881936845,4954.5019080479,5011.8723362727,5069.9070827470,5128.6138399136,5188.0003892896,5248.0746024977,5308.8444423099,5370.3179637025,5432.5033149243,5495.4087385762,5559.0425727040,5623.4132519035,5688.5293084384,5754.3993733716,5821.0321777087,5888.4365535559,5956.6214352901,6025.5958607436,6095.3689724017,6165.9500186148,6237.3483548242,6309.5734448019,6382.6348619055,6456.5422903466,6531.3055264747,6606.9344800760,6683.4391756861,6760.8297539198,6839.1164728143,6918.3097091894,6998.4199600227,7079.4578438414,7161.4341021290,7244.3596007499,7328.2453313890,7413.1024130092,7498.9420933246,7585.7757502918,7673.6148936182,7762.4711662869,7852.3563461007,7943.2823472428,8035.2612218562,8128.3051616410,8222.4264994707,8317.6377110267,8413.9514164519,8511.3803820238,8609.9375218460,8709.6358995608,8810.4887300801,8912.5093813375,9015.7113760596,9120.1083935591,9225.7142715476,9332.5430079699,9440.6087628592,9549.9258602144,9660.5087898981,9772.3722095581,9885.5309465694,10000.0000000000,10115.7945425990,10232.9299228075,10351.4216667934,10471.2854805090,10592.5372517729,10715.1930523761,10839.2691402120,10964.7819614319,11091.7481526240,11220.1845430196,11350.1081567231,11481.5362149688,11614.4861384034,11748.9755493953,11885.0222743702,12022.6443461741,12161.8600064637,12302.6877081238,12445.1461177138,12589.2541179417,12735.0308101666,12882.4955169313,13031.6677845230,13182.5673855641,13335.2143216332,13489.6288259165,13645.8313658892,13803.8426460288,13963.6836105594,14125.3754462276,14288.9395851110,14454.3977074593,14621.7717445672,14791.0838816821,14962.3565609443,15135.6124843621,15310.8746168203,15488.1661891248,15667.5107010815,15848.9319246111,16032.4539069004,16218.1009735893,16405.8977319954,16595.8690743756,16788.0401812256,16982.4365246175,17179.0838715759,17378.0082874938,17579.2361395869,17782.7941003892,17988.7091512879,18197.0085860998,18407.7200146895,18620.8713666287,18836.4908948980,19054.6071796325,19275.2491319094,19498.4459975805,19724.2273611485,19952.6231496888,20183.6636368156,20417.3794466953,20653.8015581053,20892.9613085404,21134.8903983665,21379.6208950223,21627.1852372702,21877.6162394955,22130.9470960564,22387.2113856834,22646.4430759306,22908.6765276777,23173.9464996848,23442.2881531992,23713.7370566166,23988.3291901949,24266.1009508241,24547.0891568503,24831.3310529557,25118.8643150958,25409.7270554931,25703.9578276886,26001.5956316527,26302.6799189538,26607.2505979881,26915.3480392691,27227.0130807791,27542.2870333817,27861.2116862977,28183.8293126445,28510.1826750391,28840.3150312661,29174.2701400117,29512.0922666638,29853.8261891796,30199.5172040202,30549.2111321552,30902.9543251359,31260.7936712396,31622.7766016838,31988.9510969140,32359.3656929628,32734.0694878838,33113.1121482591,33496.5439157828,33884.4156139203,34276.7786546450,34673.6850452532,35075.1873952568,35481.3389233575,35892.1934645005,36307.8054770101,36728.2300498085,37153.5229097173,37583.7404288444,38018.9396320561,38459.1782045354,38904.5144994280,39355.0075455777,39810.7170553497,40271.7034325459,40738.0277804113,41209.7519097330,41686.9383470336,42169.6503428582,42657.9518801593,43151.9076827765,43651.5832240166,44157.0447353312,44668.3592150963,45185.5944374923,45708.8189614875,46238.1021399260,46773.5141287198,47315.1258961480,47863.0092322638,48417.2367584099,48977.8819368447,49545.0190804791,50118.7233627273,50699.0708274704,51286.1383991365,51880.0038928961,52480.7460249772,53088.4444230988,53703.1796370253,54325.0331492434,54954.0873857625,55590.4257270404,56234.1325190349,56885.2930843841,57543.9937337157,58210.3217770871,58884.3655355588,59566.2143529011,60255.9586074358,60953.6897240169,61659.5001861482,62373.4835482419,63095.7344480193,63826.3486190548,64565.4229034655,65313.0552647473,66069.3448007596,66834.3917568615,67608.2975391982,68391.1647281429,69183.0970918936,69984.1996002273,70794.5784384137,71614.3410212903,72443.5960074991,73282.4533138904,74131.0241300918,74989.4209332456,75857.7575029184,76736.1489361819,77624.7116628691,78523.5634610071,79432.8234724282,80352.6122185618,81283.0516164100,82224.2649947071,83176.3771102671,84139.5141645195,85113.8038202376,86099.3752184600,87096.3589956081,88104.8873008015,89125.0938133746,90157.1137605957,91201.0839355910,92257.1427154763,93325.4300796991,94406.0876285923,95499.2586021437,96605.0878989814,97723.7220955811,98855.3094656939,100000.0000000000,101157.9454259898,102329.2992280754,103514.2166679343,104712.8548050899,105925.3725177290,107151.9305237607,108392.6914021204,109647.8196143185,110917.4815262401,112201.8454301963,113501.0815672314,114815.3621496882,116144.8613840344,117489.7554939530,118850.2227437019,120226.4434617413,121618.6000646368,123026.8770812381,124451.4611771384,125892.5411794166,127350.3081016663,128824.9551693135,130316.6778452300,131825.6738556408,133352.1432163324,134896.2882591653,136458.3136588924,138038.4264602884,139636.8361055936,141253.7544622755,142889.3958511104,144543.9770745928,146217.7174456718,147910.8388168207,149623.5656094433,151356.1248436207,153108.7461682029,154881.6618912483,156675.1070108150,158489.3192461114,160324.5390690042,162181.0097358930,164058.9773199539,165958.6907437560,167880.4018122559,169824.3652461746,171790.8387157589,173780.0828749376,175792.3613958693,177827.9410038923,179887.0915128787,181970.0858609983,184077.2001468955,186208.7136662866,188364.9089489802,190546.0717963248,192752.4913190936,194984.4599758046,197242.2736114853,199526.2314968879,201836.6363681560,204173.7944669527,206538.0155810531,208929.6130854041,211348.9039836648,213796.2089502233,216271.8523727020,218776.1623949552,221309.4709605637,223872.1138568338,226464.4307593062,229086.7652767775,231739.4649968480,234422.8815319923,237137.3705661655,239883.2919019490,242661.0095082414,245470.8915685028,248313.3105295568,251188.6431509582,254097.2705549306,257039.5782768865,260015.9563165272,263026.7991895382,266072.5059798809,269153.4803926914,272270.1308077910,275422.8703338169,278612.1168629772,281838.2931264455,285101.8267503910,288403.1503126606,291742.7014001166,295120.9226666384,298538.2618917957,301995.1720402019,305492.1113215516,309029.5432513592,312607.9367123956,316227.7660168379
};	

/* 正弦 表格0.0-90.0度 数值*10000 */
static const int sin_lookup_table[]={
	0,17,34,52,69,87,104,122,139,157,174,191,209,226,244,261,279,296,314,331,348,366,383,401,418,
	436,453,471,488,505,523,540,558,575,593,610,627,645,662,680,697,714,732,749,767,784,801,819,
	836,854,871,888,906,923,941,958,975,993,1010,1027,1045,1062,1079,1097,1114,1132,1149,1166,
	1184,1201,1218,1236,1253,1270,1287,1305,1322,1339,1357,1374,1391,1409,1426,1443,1460,1478,
	1495,1512,1529,1547,1564,1581,1598,1616,1633,1650,1667,1684,1702,1719,1736,1753,1770,1788,
	1805,1822,1839,1856,1873,1890,1908,1925,1942,1959,1976,1993,2010,2027,2044,2062,2079,2096,
	2113,2130,2147,2164,2181,2198,2215,2232,2249,2266,2283,2300,2317,2334,2351,2368,2385,2402,
	2419,2436,2453,2469,2486,2503,2520,2537,2554,2571,2588,2605,2621,2638,2655,2672,2689,2706,
	2722,2739,2756,2773,2789,2806,2823,2840,2856,2873,2890,2907,2923,2940,2957,2973,2990,3007,
	3023,3040,3056,3073,3090,3106,3123,3139,3156,3173,3189,3206,3222,3239,3255,3272,3288,3305,
	3321,3338,3354,3370,3387,3403,3420,3436,3452,3469,3485,3502,3518,3534,3551,3567,3583,3599,
	3616,3632,3648,3665,3681,3697,3713,3729,3746,3762,3778,3794,3810,3826,3842,3859,3875,3891,
	3907,3923,3939,3955,3971,3987,4003,4019,4035,4051,4067,4083,4099,4115,4131,4146,4162,4178,
	4194,4210,4226,4241,4257,4273,4289,4305,4320,4336,4352,4368,4383,4399,4415,4430,4446,4461,
	4477,4493,4508,4524,4539,4555,4570,4586,4601,4617,4632,4648,4663,4679,4694,4710,4725,4740,
	4756,4771,4786,4802,4817,4832,4848,4863,4878,4893,4909,4924,4939,4954,4969,4984,4999,5015,
	5030,5045,5060,5075,5090,5105,5120,5135,5150,5165,5180,5195,5210,5224,5239,5254,5269,5284,
	5299,5313,5328,5343,5358,5372,5387,5402,5417,5431,5446,5461,5475,5490,5504,5519,5533,5548,
	5562,5577,5591,5606,5620,5635,5649,5664,5678,5692,5707,5721,5735,5750,5764,5778,5792,5807,
	5821,5835,5849,5863,5877,5891,5906,5920,5934,5948,5962,5976,5990,6004,6018,6032,6045,6059,
	6073,6087,6101,6115,6129,6142,6156,6170,6184,6197,6211,6225,6238,6252,6266,6279,6293,6306,
	6320,6333,6347,6360,6374,6387,6401,6414,6427,6441,6454,6467,6481,6494,6507,6520,6534,6547,
	6560,6573,6586,6600,6613,6626,6639,6652,6665,6678,6691,6704,6717,6730,6743,6755,6768,6781,
	6794,6807,6819,6832,6845,6858,6870,6883,6896,6908,6921,6934,6946,6959,6971,6984,6996,7009,
	7021,7033,7046,7058,7071,7083,7095,7107,7120,7132,7144,7156,7169,7181,7193,7205,7217,7229,
	7241,7253,7265,7277,7289,7301,7313,7325,7337,7349,7360,7372,7384,7396,7408,7419,7431,7443,
	7454,7466,7477,7489,7501,7512,7524,7535,7547,7558,7569,7581,7592,7604,7615,7626,7637,7649,
	7660,7671,7682,7693,7705,7716,7727,7738,7749,7760,7771,7782,7793,7804,7815,7826,7836,7847,
	7858,7869,7880,7890,7901,7912,7922,7933,7944,7954,7965,7975,7986,7996,8007,8017,8028,8038,
	8048,8059,8069,8079,8090,8100,8110,8120,8131,8141,8151,8161,8171,8181,8191,8201,8211,8221,
	8231,8241,8251,8260,8270,8280,8290,8300,8309,8319,8329,8338,8348,8358,8367,8377,8386,8396,
	8405,8415,8424,8433,8443,8452,8461,8471,8480,8489,8498,8508,8517,8526,8535,8544,8553,8562,
	8571,8580,8589,8598,8607,8616,8625,8633,8642,8651,8660,8668,8677,8686,8694,8703,8712,8720,
	8729,8737,8746,8754,8763,8771,8779,8788,8796,8804,8813,8821,8829,8837,8845,8853,8862,8870,
	8878,8886,8894,8902,8910,8917,8925,8933,8941,8949,8957,8964,8972,8980,8987,8995,9003,9010,
	9018,9025,9033,9040,9048,9055,9063,9070,9077,9085,9092,9099,9106,9114,9121,9128,9135,9142,
	9149,9156,9163,9170,9177,9184,9191,9198,9205,9211,9218,9225,9232,9238,9245,9252,9258,9265,
	9271,9278,9284,9291,9297,9304,9310,9316,9323,9329,9335,9342,9348,9354,9360,9366,9372,9378,
	9384,9390,9396,9402,9408,9414,9420,9426,9432,9438,9443,9449,9455,9460,9466,9472,9477,9483,
	9488,9494,9499,9505,9510,9515,9521,9526,9531,9537,9542,9547,9552,9557,9563,9568,9573,9578,
	9583,9588,9593,9598,9602,9607,9612,9617,9622,9626,9631,9636,9640,9645,9650,9654,9659,9663,
	9668,9672,9677,9681,9685,9690,9694,9698,9702,9707,9711,9715,9719,9723,9727,9731,9735,9739,
	9743,9747,9751,9755,9759,9762,9766,9770,9774,9777,9781,9785,9788,9792,9795,9799,9802,9806,
	9809,9812,9816,9819,9822,9826,9829,9832,9835,9838,9841,9845,9848,9851,9854,9857,9859,9862,
	9865,9868,9871,9874,9876,9879,9882,9884,9887,9890,9892,9895,9897,9900,9902,9905,9907,9909,
	9912,9914,9916,9918,9921,9923,9925,9927,9929,9931,9933,9935,9937,9939,9941,9943,9945,9947,
	9948,9950,9952,9953,9955,9957,9958,9960,9961,9963,9964,9966,9967,9969,9970,9971,9973,9974,
	9975,9976,9978,9979,9980,9981,9982,9983,9984,9985,9986,9987,9988,9988,9989,9990,9991,9991,
	9992,9993,9993,9994,9995,9995,9996,9996,9997,9997,9997,9998,9998,9998,9999,9999,9999,9999,
	9999,9999,9999,9999,10000};

#define RANGE	0
#define MTLVEL	4
#define D_DELAY	8
#define P_DELAY	12
#define A_START	16
#define A_WIDTH	20
#define B_START	24
#define B_WIDTH	28
#define S_REF1	32
#define S_REF2	36
#define ANGLE	40
#define X_VALUE	44
#define THICKNE	48
#define DIAMET	52
#define OFFSET	56
#define DAMPING	60
#define POWER	61
#define DUAL	62
#define RECTIFY	63
#define A_LOGIC 64
#define	A_THRSH	65
#define B_LOGIC	66
#define B_THRSH	67
#define SET		68
#define DACMODE	69
#define DACECHO	70
#define TOF		71
#define F_BAND	72
#define MAGNIFY	73
#define A_SCAN	74
#define MEAS1	75
#define MEAS2	76
#define MEAS3	77
#define MEAS4	78
#define	JOB		79
#define	FILLED	80
#define SCHEME	81
#define LIGHT	82
#define SCALE	83
#define LANG	84
#define DB_STEP	85
#define PRINTER	86
#define COPYMODE	87
#define HORN	88
#define UNIT	89
#define DB		90
#define RANGE_REG	92
#define MTLVEL_REG	93
#define D_DELAY_REG	94
#define P_DELAY_REG	95
#define ASTART_REG	96
#define AWIDTH_REG	97
#define BSTART_REG	98
#define BWIDTH_REG	99
#define	S_REF1_REG	100
#define S_REF2_REG	101
#define ANGLE_REG	102
#define THICKNE_REG	103
#define DIAMET_REG	104
#define BLOCK_POS	105
#define X_VALUE_REG	106
#define DB_DAC	107
#define DAC_DATA_X	108
#define DAC_DATA_Y	140
#define OFF_DB	172
#define PROBE_CLASS 180
#define REC		184
#define AUTO_DB_H	186
#define AVG_STATUS	187
#define CAL_D	188
#define CAL_H	192
#define AVG_D1	196
#define AVG_D2	200
#define AVG_D1_REG 204
#define AVG_D2_REG 205
#define CAL_D_REG	206
#define CAL_H_REG	207
#define AVG_DATA_X	208
#define AVG_DATA_Y	212
#define PROBE_POS	216 
#define HANFENG_W	218
#define PROBE_POS_REG	220
#define HANFENG_W_REG	221
#define ZOOMED	228
#define	HOR_POS	229
#define VER_POS	234
#define POS		250
#define LOCK_KEY	251
#define FREZ_1	251

#define DISTANCE	1
#define RATE		2
#define ELSE		3

typedef struct config{
	int range;	//范围0
	int mtlvel;	//声速4
	int d_delay;	//扫描延时8
	int p_delay;	//探头延时12
	int astart;	//闸门a起点16
	int awidth;	//闸门a宽度20
	int bstart;	//闸门b起点24
	int bwidth;	//闸门b宽度28
	int s_ref1; //参照物132
	int s_ref2; //参照物136
	int angle;//角度40
	int x_value;//前沿x 值44
	int thickne;//厚度48
	int diamet;//直径52
	int offset;//偏移56
	unsigned char damping;	//阻尼60	     0 50   1 100   2 200    3 500
	unsigned char power;	//功率61	0低1高
	unsigned char dual;		//双晶62	0关1开
	unsigned char rectify;	//检波63	0全波1正版波2负半波3射频
	unsigned char alogic;		//闸门a逻辑64 0关1正2负
	unsigned char athrsh;	//闸门a 高度65闸门高的百分比
	unsigned char blogic;		//闸门b逻辑66 0关1正2负 
	unsigned char bthrsh;	//闸门b 高度67闸门高的百分比
	unsigned char set;	//配置编号68
	unsigned char dacmode;//dac模式69	0关1记录2DAC回放3修正
	unsigned char dacecho;//dac回波70	几个dac记录点
	unsigned char tof;	//测量 71 0波峰 或者 1波前
	unsigned char f_band;	//屏幕显示72 改频带	0 1 2 3 
	unsigned char magnify;//放大73	0关 1闸门A 
	unsigned char a_scan;//a扫描 标准或者包络74	0标准1包络
	unsigned char meas1;//测量1 75 0-20
	unsigned char meas2;//测量2 76 0-20
	unsigned char meas3;//测量3 77 0-20
	unsigned char meas4;//测量4 78 0-20
	unsigned char job;//任务79	1-200
	unsigned char filled;//填充80	0关1开
	unsigned char scheme;//色彩81	0-7 4种色彩模式
	unsigned char light;//背光82	0弱1中2强
	unsigned char scale;// 刻度83	0刻度1声程2分度
	unsigned char lang;	//语言84	0中文1英文
	unsigned char db_step;//增益步长91
	unsigned char printer;//打印机86	
	unsigned char copymode;//拷贝模式87 0 屏幕打印1数据打印
	unsigned char horn;//蜂鸣88	0关1报警
	unsigned char unit;//单位89	 0inch 1mm
	unsigned short db;//增益90
	unsigned char range_reg;//范围  1  微调or  0 粗调 92
	unsigned char mtlvel_reg;//声速  1  微调or  0 粗调 93
	unsigned char d_delay_reg;//扫描延时 1  微调or  0粗调 94
	unsigned char p_delay_reg;//探头延时 1  微调or  0 粗调 95
	unsigned char astart_reg;//闸门A起点 1  微调or  0 粗调 96
	unsigned char awidth_reg;//闸门A宽度 1  微调or  0 粗调 97
	unsigned char bstart_reg;//闸门B起点 1  微调or  0 粗调 98
	unsigned char bwidth_reg;//闸门B宽度 1  微调or  0 粗调 99
	unsigned char s_ref1_reg;//参考物1 1  微调or  0 粗调 100
	unsigned char s_ref2_reg;//参考物1 1  微调or  0 粗调 101
	unsigned char angle_reg;//角度  1  微调or  0 粗调 102
	unsigned char thickne_reg;//厚度 1  微调or  0 粗调103
	unsigned char diamet_reg;//直径 1  微调or  0 粗调104
	unsigned char block_position;//0=block1  1= block2 105
	unsigned char x_value_reg;//106
	unsigned char db_dac;//保留107
	unsigned int dac_data_x[8];//dac曲线数据108
	float dac_data_y[8];//140
	short off_db[4];//140 172
	unsigned char probe_class;//148 180 探头种类 直探头 0 N 斜探头 1 A
	unsigned char probe_frequency;//149 181 探头 频率 1 1.5 2 2.5 3 4 5 7.5 10 15 20 25 表示的时候*2
	unsigned char probe_x;//150 182 直探头 时候 表示 直径 斜探头时候表示 一边的宽度
	unsigned char probe_y;//151 183 直探头 无效 斜探头时候表示 另一边的宽度
	unsigned char rec;//152 184 补偿
	unsigned char R21;//153 185
	unsigned char auto_db_h;//154  186 /*20% ~ 80%*/
	unsigned char avg_status;//155 187 avg状态
	unsigned int cal_d;//156 188
	unsigned int cal_h;//160 192
	unsigned int avg_d1;//164 196
	unsigned int avg_d2;//168 200
	unsigned char avg_d1_reg;//172 204 1*1 2*10 基础步进0.5mm
	unsigned char avg_d2_reg;//173 205
	unsigned char cal_d_reg;//174 206
	unsigned char cal_h_reg;//175 207
	unsigned int avg_data_x;//dac曲线数据176 208
	float avg_data_y;//180 212
	unsigned short probe_pos;/*探头位置*/
	unsigned short hanfeng_width;/*焊缝宽度*/
	unsigned char probe_pos_reg;
	unsigned char hanfeng_w_reg;
	unsigned short Rc;
	unsigned char zoomed;//是否全屏模式	0不全屏1全屏 148 + 80
	unsigned char hor_pos[6];
	//此数组表示横按钮组,标所停留的位置,即h1[0]=3,表示第一组图标停留位置在4位置115  149 + 80
	unsigned char ver_pos[5][4];//记录当前子菜单停留位置      154 + 80
	unsigned char pos;//记录当前所在菜单          170 + 80
	unsigned char frez;//冻结标志138  0不冻结 1冻结  172 + 80
} CONFIG,*CONFIG_P;

typedef struct measure_data{
	int off;/*0*/
	int Sa;/*1闸门A内波形测量点声程*/
	int Sb;/*2闸门B内波形测量点声程*/
	int ba;/*3闸门B与闸门A波形测量点的声程差*/
	int Ha;/*4闸门A内回波高度占显示高度百分比*/
	int Hb;/*5闸门B内回波高度占显示高度百分比*/
	int ha;/*6闸门A位置处高度与闸门内最高回波点的分贝差*/
	int hb;/*7闸门B位置处高度与闸门内最高回波点的分贝差*/
	int Rs;/*8屏幕显示的起始位置,即"扫描延时"设置值 问题*/
	int Re;/*9屏幕显示的结束位置,即"范围"设置值*/
	int la;/*10闸门A位置所在处的legs数*/
	int lb;/*11闸门B位置所在处的legs数*/
	int Da;/*12闸门A内回波点距被测件表面的深度*/
	int Db;/*13闸门B内回波点距被测件表面的深度*/
	int Pa;/*14闸门A内回波点到声束入射点的声程*/
	int Pb;/*15闸门B内回波点到声束入射点的声程*/
	int Ra;/*16探头前沿表面到闸门A内回波点的水平距离*/
	int Rb;/*17探头前沿表面到闸门B内回波点的水平距离*/
	int krvCa;/*18闸门A内回波点高度相对DAC曲线高的百分比*/
	int krvCb;/*19闸门B内回波点高度相对DAC曲线高的百分比*/
	int dB_db;/*20回波高度相对DAC曲线高度的的dB差*/
} MEASURE,*MEASURE_P;

typedef struct dpl_config{
	CONFIG_P	config_current;		/*当前配置文件内存指针*/
	MEASURE_P	measure_cur_data;	/*存储计算出来的信息结构体*/
	unsigned short*	current_data;	/*当前波形数据(已经计算过的)*/
	unsigned char*	p_config;		/*指向config_current*/
	unsigned char*	p_measure;		/*指向measure_cur_data*/
	unsigned short*	virtual_video_add;	/*临时画图地址*/
	unsigned short*	virtual_video_add1;	/*临时画图地址1*/
	unsigned short*	true_video_add;		/*实际显存地址*/
	unsigned int	map_base;		/*0x10000000*/		
	unsigned int	sram_base;		/*0x00300000波形数据 ,传入数据起点地址*/
	unsigned short	*trans_data;	/*传送FPGA 配置 地址*/
	unsigned int*	usart2_data;	/*需要发送到串口的数据*/
/*I2C 设备节点 修改GPIO寄存器的指针,串口键盘设备,spi设备, framebuffer 设备*/
	int		fd_config;
	int		fd_gpio;
	int		fd_key;
	int		fd_spi;
	int		fd_store;
	int		fd_fb;
	int		spi_sky;
	int		compensation;
	/*实际采样点数量*/
	unsigned int dot_quantily;
	unsigned int cur_data_num;
	int		d_tmp;
	/*峰值记忆*/
	int		agat_y;
	int		agat_x;
	/*延时数值*/
	unsigned int delay_tmp;
	/**/
	int true_range;
	int true_delay;
	int dac_cal_pos;/*dac修正序号*/
	/*闸门A B最大值 */
	unsigned int a_gata_max;
	unsigned int b_gata_max;
	/**/
	unsigned int Sa_array[9];
	unsigned int Sb_array[9];
	/*播放标志*/
	int		play_mark;
	int		probe_pos;
	int		fps;
	int		start_pos;
	int		count;
	int		cal_pos;
	int		dac_off_mode;/*0默认 1指定*/
	int		store_mode;
	int		hanfeng;/*1,2为焊缝检测状态1 V型 2 X型 0关闭 */
	int		cal_mode;/*0默认 1指定*/
	/*日期 时间*/ 
	int		date_pos;
	unsigned int	date[3];
	int		time_pos;
	unsigned int	time_c[3];


	unsigned short* save_data_p;

	/*for new little machine*/
	int menu_mark;
}DPL_CONFIG,*P_DPL_CONFIG;

/*fft.c*/
extern void   fft(float   *xr,float   *xi,int   l,int   inv); 

#endif
